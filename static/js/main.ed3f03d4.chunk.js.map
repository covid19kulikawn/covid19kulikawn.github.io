{"version":3,"sources":["logo.svg","Vaccine/index.js","Info.js","DailyStat/index.js","Summary.js","App.js","reportWebVitals.js","index.js"],"names":["VaccinePanel","count","className","Prayer","Vaccine","GenericPanel","heading","content","InfoComponent","extra","rows","length","map","index","autoPlay","infiniteLoop","showStatus","interval","COLORS","data","timeseries","active","discharged","newConfirmed","homeQuarantine","QuarantineStatus","communityQuarantine","title","dataQ","Object","keys","key","name","value","ResponsiveContainer","width","height","PieChart","Pie","dataKey","outerRadius","label","entry","Cell","fill","Tooltip","Legend","verticalAlign","DailyChart","records","reduce","acc","item","timestamp","values","labels","push","Date","series","options","axisX","labelInterpolationFnc","moment","format","type","AllCharts","summary","centers","waitingForResult","information","lastUpdatedAt","Card","newCount","Row","date","center","Table","props","state","compareBy","bind","sortBy","a","b","arrayCopy","this","sort","setState","rowData","onClick","React","Component","Summary","total","newActive","newDischarged","toLocaleString","weekday","year","month","day","hour","minute","hour12","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed3f03d4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.ec181872.svg\";","import React from 'react';\nimport './Vaccine.css';\n\nconst VaccinePanel = ({ count }) => {\n\treturn (<div className=\"vaccine-panel\">Results nghah mek {count}</div>)\n}\n\nexport default VaccinePanel;\n","import React from 'react';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\nimport { Carousel } from 'react-responsive-carousel';\nimport './Info.css';\n\nconst Prayer = () => (\n\t<div className=\"prayer\">\n\t\t<h5>Tawngtai Thupui</h5>\n\t\t<ol>\n\t\t\t<li>Hri a lo reh theih nan</li>\n\t\t\t<li>Covid-19 Hri vei mek te an dam thuai theih nan</li>\n\t\t\t<li>Damlo enkawltu te tan</li>\n\t\t\t<li>Frontline Workers te tan</li>\n\t\t</ol>\n\t</div>\n);\n\nconst Vaccine = () => (\n\t<div className=\"vaccine\">\n\t\tTul takah lo chuan chhuak lo hram rawh, I chhuah pawn mask vuah la, kut silfai tha la, feet 6 tal a in hlat in awm tum hram rawh\n\t</div>\n)\n\nconst GenericPanel = ({ heading, content }) => (\n\t<div className=\"generic-info\">\n\t\t<h5>{heading}</h5>\n\t\t<div>{content}</div>\n\t</div>\n)\n\n\nconst InfoComponent = ({ extra }) => {\n\tconst rows = (extra && extra.length > 0)\n\t\t\t  ? extra.map(({content, heading}, index) =>\n\t\t\t\t (<GenericPanel\n \t\t\t\t\t  key={'key' + index}\n \t\t\t\t\t  heading={heading}\n \t\t\t\t\t  content={content}\n\t\t\t\t\t/>)) : []\n\treturn (\n\t\t<Carousel autoPlay infiniteLoop showStatus={false} interval={4000} className=\"info-carousel\">\n\t\t\t<div>\n\t\t\t\t\t<Prayer />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t\t<Vaccine />\n\t\t\t</div>\n\t\t\t{rows}\n\t\t</Carousel>);\n}\n\nexport default InfoComponent\n","import React from 'react';\nimport { PieChart, Pie, Legend, Tooltip, Cell, ResponsiveContainer } from 'recharts';\nimport moment from 'moment';\nimport ChartistGraph from 'react-chartist';\nimport './DailyStat.css';\nimport data from '../data.json';\n\nconst COLORS = ['#FFBB28', '#FF8042', '#e34234', '#FFBB28'];\n\nconst { active, discharged, newConfirmed } = data.timeseries;\nconst { homeQuarantine, communityQuarantine } = data;\n\n\nconst QuarantineStatus = ({ data, title }) => {\n    const dataQ = Object.keys(data).map((key) => \n        ({\n            name: key,\n            value: data[key]\n        })\n    );\n\n    return (\n        <div className=\"quarantine-chart\">\n        <h4>{title}</h4>\n        <ResponsiveContainer width={300} height={200}>\n          <PieChart\n            width={300}\n            height={100}\n          >\n            <Pie\n                dataKey=\"value\"\n                data={dataQ}\n                outerRadius={50}\n                label\n              >\n              {dataQ.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n              ))}\n              </Pie>\n              <Tooltip />\n              <Legend verticalAlign=\"bottom\" />\n          </PieChart>\n        </ResponsiveContainer>\n        </div>\n    )\n}\n\nconst DailyChart = ({ data, className }) => {\n    const records = data.reduce((acc, item) => {\n        const timestamp = Object.keys(item)[0];\n        const value = Object.values(item)[0];\n        acc.labels.push(new Date(timestamp * 1000))\n        acc.series[0].push(value)\n        return acc\n    }, {\n        labels: [],\n        series: [[]]\n    });\n\n    const options = {\n        axisX: {\n            labelInterpolationFnc: function(value, index) {\n                return moment(value).format('MMM D')\n            }\n        },\n    };\n\n    const type = 'Line'\n\n    return (\n        <div className=\"seriesChart\">\n        <h5>{className}</h5>\n        <ChartistGraph \n            data={records}\n            options={options}\n            type={type}\n            className={className}\n        />\n        </div>\n    )\n}\n\nconst AllCharts = () => {\n    return (\n        <div>\n            <div className=\"app-pie-charts\">\n                <QuarantineStatus data={homeQuarantine} title=\"Home Quarantine\" />\n                {/* <QuarantineStatus data={communityQuarantine} title=\"Community Quarantine\" /> */}\n            </div>\n            <div className=\"all-charts\">\n                <DailyChart data={newConfirmed} className=\"confirmed\" />\n                <DailyChart data={active} className=\"active\" />\n                <DailyChart data={discharged} className=\"discharged\" />\n            </div>\n        </div>)\n\n}\n\nexport default AllCharts;\n","import React from 'react';\nimport './Summary.css';\nimport data from './data.json';\nimport VaccinePanel from './Vaccine';\nimport InfoComponent from './Info';\nimport DailyStat from './DailyStat';\n\nconst {summary, centers, waitingForResult, information, lastUpdatedAt} = data\n\nconst Card = ({title, value, newCount}) =>\n    (\n      <div className=\"card\">\n        <h5>{title}</h5>\n        <p>{value}{newCount ? <sup className=\"newCount\"> +{newCount}</sup> : ''}</p>\n      </div>\n    );\n\n//https://codepen.io/austinlyons/pen/YpmyJB\nconst Row = ({date, center, count}) => (\n  <div className=\"row\">\n    <div>{center}</div>\n    <div>{count}</div>\n  </div>\n);\n\n/*\n  Table component written as an ES6 class\n*/\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: centers\n    };\n\n    this.compareBy.bind(this);\n    this.sortBy.bind(this);\n  }\n\n  compareBy(key) {\n    return function (a, b) {\n      if (a[key] < b[key]) return -1;\n      if (a[key] > b[key]) return 1;\n      return 0;\n    };\n  }\n\n  sortBy(key) {\n    let arrayCopy = [...this.state.data];\n    arrayCopy.sort(this.compareBy(key));\n    this.setState({data: arrayCopy});\n  }\n\n  render() {\n    const rows = this.state.data.map( (rowData) => <Row {...rowData} />);\n\n    return (\n      <div className=\"table\">\n        <div className=\"header\">\n          <div onClick={() => this.sortBy('center')}>Centers</div>\n          <div onClick={() => this.sortBy('count')}>Count</div>\n        </div>\n        <div className=\"body\">\n          {rows}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction Summary() {\n\tconst {total, discharged, active, newActive, newDischarged} = summary\n  return (\n    <div className=\"App\">\n\t\t\t<h4 className=\"heading\">Kulikawn Covid-19 Dinhmun</h4>\n\t\t\t<p className=\"date\">(Last Updated At: {new Date(lastUpdatedAt * 1000).toLocaleString(\"en-IN\", { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit', hour12: true })})</p>\n\t\t\t<p className=\"contact\">LLTF Contact No: 9436143652/9774662298</p>\n\t\t\t<div className=\"summary\"> \n\t\t\t\t<Card title=\"Total Cases\" value={total} />\n\t\t\t\t<Card title=\"Discharged\" value={discharged} newCount={newDischarged} />\n\t\t\t\t<Card title=\"Active Cases\" value={active} newCount={newActive}/>\n\t\t\t</div>\n\t\t\t<VaccinePanel count={waitingForResult}/>\n\t\t\t<Table />\n            <DailyStat />\n\t\t\t<InfoComponent extra={information} />\n    </div>\n  );\n}\n\nexport default Summary;\n","import logo from './logo.svg';\nimport './App.css';\nimport Summary from './Summary';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Summary />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}